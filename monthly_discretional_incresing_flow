
----------------------------------------------------------------------------------------
--------------------------- PU: ADIÇÕES DISCRECIONALES MENSAIS -------------------------
----------------------------------------------------------------------------------------

-- Doc Base: https://docs.google.com/presentation/d/1IBaPNaju2oAOmil_7qlePDtZcaGiIvTRouDh_S8Dsqg/edit#slide=id.gc8a1f1629c_0_0


-------------------------- ADD POR 1P E PL --------------------------

-- sellers first party que estão vendedndo
create multiset volatile table add_discricional_1p, no log as 
  (
  select distinct
    a.cus_cust_id_sel cust_id,
    a.sit_site_id site_id
  from WHOWNER.LK_SEGMENTO_SELLERS a
  left join SCORING.sellers_protected_users b
    on a.cus_cust_id_sel = b.user_id
  left join WHOWNER.BT_SCO_ORIGIN_REPORT c
    on a.cus_cust_id_sel = c.cus_cust_id_sel
  where a.segmento_seller_detail = 'FIRST PARTY'
    and b.user_id is null
    and c.pay_total_paid_dol_amt > 0
    and c.pay_created_dt >= current_date - 90
  )
with data primary index (cust_id) on commit preserve rows;


-- sellers private label que estão vendendo
create multiset volatile table add_discricional_pl, no log as 
  (
  select distinct
    a.cus_cust_id_sel cust_id,
    a.sit_site_id site_id
  from WHOWNER.LK_SEGMENTO_SELLERS a
  left join SCORING.sellers_protected_users b
    on a.cus_cust_id_sel = b.user_id
  left join WHOWNER.BT_SCO_ORIGIN_REPORT c
    on a.cus_cust_id_sel = c.cus_cust_id_sel
  where a.segmento_seller_detail = 'PRIVATE LABEL'
    and b.user_id is null
    and c.pay_total_paid_dol_amt > 0
    and c.pay_created_dt >= current_date - 90
  )
with data primary index (cust_id) on commit preserve rows;


-- lista inicial
create multiset volatile table lista_inicial, no log as 
  (
  select
    cust_id,
    site_id
  from add_discricional_1p
    UNION
  select
    cust_id,
    site_id
  from add_discricional_pl
  )
with data primary index (cust_id) on commit preserve rows;


-------------------------- TABLAS SOPORTE --------------------------

-- tabla soporte de tpv
create multiset volatile table tpv_90d, no log as 
  (
  select
    a.cust_id,
    sum(case when b.tpv_segment_id = 'ON' then pay_total_paid_dol_amt else 0 end) as tpv_on,
    sum(b.pay_total_paid_dol_amt) tpv,
    round(cast(tpv_on as float)/cast(tpv as float),2) ratio_tpv_on
  from lista_inicial a
  left join whowner.BT_SCO_ORIGIN_REPORT b
    on a.cust_id = b.cus_cust_id_sel
  where b.pay_created_dt >= current_date - 93
  group by 1
  )
with data primary index (cust_id) on commit preserve rows;


---------------------- VARIÁVEIS DE PERFORMANCE ----------------------

-- parcela me2 90d
create multiset volatile table parcela_me2, no log as
  (
  SELECT
    tab1.cust cust_id,
    round(cast(tab2.ofs_me2 as float)/cast(tab1.ofs_tot as float),2) parcela_me2
  FROM
    (
    select
      a.cust_id cust,
      count(b.ord_order_id) ofs_tot
    from lista_inicial a
    left join SCORING.fraud_main b
      on a.cust_id = b.cus_cust_id_sel
    where b.tim_day_winning_date >= current_date - 93
    group by 1
    ) tab1
  LEFT JOIN
    (
    select
      a.cust_id cust,
      count(b.ord_order_id) ofs_me2
    from lista_inicial a
    left join SCORING.fraud_main b
      on a.cust_id = b.cus_cust_id_sel
    where b.tim_day_winning_date >= current_date - 93
      and b.is_me2 = 1
    group by 1
    ) tab2
    ON tab1.cust = tab2.cust
  )
with data primary index (cust_id) on commit preserve rows;


-- ratios mensais 90d
create multiset volatile table calculo_ratios as 
  (
  select distinct
    a.site_id,
    a.cust_id,
    c.segmento,
    c.segmento_seller_detail,
    c.tipofoco,
    d.trusted,
    e.ratio_tpv_on,

    zeroifnull(sum(case when (b.tim_day_winning_date >= current_date - 33) and b.is_refund = 0 then gmv_usd else 0 end)) gmv_approved_1,
    zeroifnull(sum(case when (b.tim_day_winning_date >= current_date - 33) and b.has_claim_seller = 1 then gmv_usd else 0 end)) gmv_claim_1,
    zeroifnull(sum(case when (b.tim_day_winning_date >= current_date - 33) then b.bpp_cashout_final else 0 end)) cashout_1,
    zeroifnull(gmv_claim_1/nullifzero(gmv_approved_1)) ratio_gmv_claim_1,
    zeroifnull(cashout_1/nullifzero(gmv_claim_1)) ratio_co_1,
    (case when (ratio_gmv_claim_1 < 0.1 and ratio_co_1 < 0.05) then 1 else 0 end) good_m1,
    (case when (ratio_gmv_claim_1 > 0.2 and ratio_co_1 > 0.1) then 1 else 0 end) bad_m1,

    zeroifnull(sum(case when (b.tim_day_winning_date between current_date - 63 and current_date - 34) and b.is_refund = 0 then gmv_usd else 0 end)) gmv_approved_2,
    zeroifnull(sum(case when (b.tim_day_winning_date between current_date - 63 and current_date - 34) and b.has_claim_seller = 1 then gmv_usd else 0 end)) gmv_claim_2,
    zeroifnull(sum(case when (b.tim_day_winning_date between current_date - 63 and current_date - 34) then b.bpp_cashout_final else 0 end)) cashout_2,
    zeroifnull(gmv_claim_2/nullifzero(gmv_approved_2)) ratio_gmv_claim_2,
    zeroifnull(cashout_2/nullifzero(gmv_claim_2)) ratio_co_2,
    (case when (ratio_gmv_claim_2 < 0.1 and ratio_co_2 < 0.05) then 1 else 0 end) good_m2,
    (case when (ratio_gmv_claim_2 > 0.2 and ratio_co_2 > 0.1) then 1 else 0 end) bad_m2,

    zeroifnull(sum(case when (b.tim_day_winning_date between current_date - 93 and current_date - 64) and b.is_refund = 0 then gmv_usd else 0 end)) gmv_approved_3,
    zeroifnull(sum(case when (b.tim_day_winning_date between current_date - 93 and current_date - 64) and b.has_claim_seller = 1 then gmv_usd else 0 end)) gmv_claim_3,
    zeroifnull(sum(case when (b.tim_day_winning_date between current_date - 93 and current_date - 64) then b.bpp_cashout_final else 0 end)) cashout_3,
    zeroifnull(gmv_claim_3/nullifzero(gmv_approved_3)) ratio_gmv_claim_3,
    zeroifnull(cashout_3/nullifzero(gmv_claim_3)) ratio_co_3,
    (case when (ratio_gmv_claim_3 < 0.1 and ratio_co_3 < 0.05) then 1 else 0 end) good_m3,
    (case when (ratio_gmv_claim_3 > 0.2 and ratio_co_3 > 0.1) then 1 else 0 end) bad_m3

  from lista_inicial a
  left join scoring.fraud_main b
    on a.cust_id = b.cus_cust_id_sel
  left join WHOWNER.LK_SEGMENTO_SELLERS c
    on a.cust_id = c.cus_cust_id_sel
  left join SCORING.pf_trusted_sellers_log_reasons d
    on a.cust_id = d.cus_cust_id_sel
  left join tpv_90d e
    on a.cust_id = e.cust_id
  where b.tim_day_winning_date >= current_date - 93
    and d.fecha_hasta is null
  group by 1,2,3,4,5,6,7
  )
with data primary index (cust_id) on commit preserve rows;



-------------------------- EXECUÇÃO DA REGRA --------------------------

-- tabla de scoring para subir las infos
create table scoring.increase_flow_protected_users
  (
  insert_date date,
  site_id varchar(50),
  cust_id int,
  segmento varchar(50),
  subsegmento varchar(50),
  tipofoco varchar(50),
  is_trusted int,
  ratio_tpv_on float,
  parcela_me2 float,
  gmv_approved_1 float,
  gmv_approved_2 float,
  gmv_approved_3 float,
  gmv_claim_1 float,
  gmv_claim_2 float,
  gmv_claim_3 float,
  cashout_1 float,
  cashout_2 float,
  cashout_3 float,
  ratio_gmv_claim_1 float,
  ratio_gmv_claim_2 float,
  ratio_gmv_claim_3 float,
  ratio_co_1 float,
  ratio_co_2 float,
  ratio_co_3 float,
  good_m1 int,
  good_m2 int,
  good_m3 int,
  bad_m1 int,
  bad_m2 int,
  bad_m3 int,
  riesgo varchar(50),
  perfil varchar(50),
  accion varchar(50),
  motivo varchar(50),
  regla varchar(50)
  );
  

-- add na tabela sellers para añadir la marca post filtro
insert into scoring.increase_flow_protected_users
  select distinct
    current_date,
    a.site_id,
    a.cust_id,
    b.segmento,
    b.segmento_seller_detail,
    b.tipofoco,
    b.trusted,
    b.ratio_tpv_on,
    round(zeroifnull(c.parcela_me2),2) parcela_me2,
    b.gmv_approved_1,
    b.gmv_approved_2,
    b.gmv_approved_3,
    b.gmv_claim_1,
    b.gmv_claim_2,
    b.gmv_claim_3,
    b.cashout_1,
    b.cashout_2,
    b.cashout_3,
    b.ratio_gmv_claim_1,
    b.ratio_gmv_claim_2,
    b.ratio_gmv_claim_3,
    b.ratio_co_1,
    b.ratio_co_2,
    b.ratio_co_3,
    b.good_m1,
    b.good_m2,
    b.good_m3,
    b.bad_m1,
    b.bad_m2,
    b.bad_m3,
    (case when a.cust_id > 0 then 'N' else 'S' end) riesgo,
    (case when a.cust_id > 0 then 'confiable' else 'no confiable' end) perfil,
    (case when a.cust_id > 0 then 'añadir la marca' else 'no añadir la marca' end) accion,
    (case when a.cust_id > 0 then 'pedido comercial' else 'xxx' end) motivo,
    (case
      when a.cust_id > 0 and b.segmento_seller_detail = 'FIRST PARTY' then 'añadir discrecional por 1p vendendo'
      when a.cust_id > 0 and b.segmento_seller_detail = 'PRIVATE LABEL' then 'añadir discrecional por pl vendendo'
      else 'xxx' end) regla
  from lista_inicial a
  left join calculo_ratios b
    on a.cust_id = b.cust_id
  left join parcela_me2 c
    on a.cust_id = c.cust_id;


--------------------------- SELEÇÃO DE DADOS ---------------------------

-- DDL dos dados
select * from scoring.increase_flow_protected_users;

delete from scoring.increase_flow_protected_users;

UPDATE scoring.increase_flow_protected_users
  SET insert_date = '2021-10-01'
  WHERE insert_date = '2021-10-07';



